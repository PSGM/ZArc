//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PracTec.ZArc.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PracTec.ZArc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive path &quot;{0}&quot; found, not marked for overwrite.
        /// </summary>
        public static string ErrorArchiveFound {
            get {
                return ResourceManager.GetString("ErrorArchiveFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive path &quot;{0}&quot; not found.
        /// </summary>
        public static string ErrorArchiveNotFound {
            get {
                return ResourceManager.GetString("ErrorArchiveNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry &quot;{0}&quot; found. not marked to allow duplicate .
        /// </summary>
        public static string ErrorEntryFound {
            get {
                return ResourceManager.GetString("ErrorEntryFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry &quot;{0}&quot; not found.
        /// </summary>
        public static string ErrorEntryNotFound {
            get {
                return ResourceManager.GetString("ErrorEntryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &quot;{0}&quot; invalid.
        /// </summary>
        public static string ErrorInvalidKeyword {
            get {
                return ResourceManager.GetString("ErrorInvalidKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &quot;{0}&quot; value &quot;{1}&quot; invalid.
        /// </summary>
        public static string ErrorInvalidKeywordValue {
            get {
                return ResourceManager.GetString("ErrorInvalidKeywordValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verb &quot;{0}&quot; invalid.
        /// </summary>
        public static string ErrorInvalidVerb {
            get {
                return ResourceManager.GetString("ErrorInvalidVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source path &quot;{0}&quot; not found.
        /// </summary>
        public static string ErrorSourceNotFound {
            get {
                return ResourceManager.GetString("ErrorSourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target path &quot;{0}&quot; found, not marked for overwrite.
        /// </summary>
        public static string ErrorTargetFound {
            get {
                return ResourceManager.GetString("ErrorTargetFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument exception: Archive, source, or taget path contains invalid characters.
        /// </summary>
        public static string ExceptionArgument {
            get {
                return ResourceManager.GetString("ExceptionArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument null exception: Archive, source, or target path is null.
        /// </summary>
        public static string ExceptionArgumentNull {
            get {
                return ResourceManager.GetString("ExceptionArgumentNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not found exception: Source or target directory not found.
        /// </summary>
        public static string ExceptionDirectoryNotFound {
            get {
                return ResourceManager.GetString("ExceptionDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found exception: Source or target file  not found .
        /// </summary>
        public static string ExceptionFileNotFound {
            get {
                return ResourceManager.GetString("ExceptionFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General exception: 
        ///{0} .
        /// </summary>
        public static string ExceptionGeneral {
            get {
                return ResourceManager.GetString("ExceptionGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid data exception: Invalid or unsupported archive file format .
        /// </summary>
        public static string ExceptionInvalidData {
            get {
                return ResourceManager.GetString("ExceptionInvalidData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IO exception: An input file could not be opened, an output file already existed.
        /// </summary>
        public static string ExceptionIO {
            get {
                return ResourceManager.GetString("ExceptionIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not supported exception: Invalid archive format or does not support writing.
        /// </summary>
        public static string ExceptionNotSupported {
            get {
                return ResourceManager.GetString("ExceptionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path too long exception: Archive, source, or taget path is too long.
        /// </summary>
        public static string ExceptionPathTooLong {
            get {
                return ResourceManager.GetString("ExceptionPathTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unauthorized access exception: The caller does not have access to the archive, source or target path.
        /// </summary>
        public static string ExceptionUnauthorizedAccess {
            get {
                return ResourceManager.GetString("ExceptionUnauthorizedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  bytes.
        /// </summary>
        public static string FormatB {
            get {
                return ResourceManager.GetString("FormatB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  GB.
        /// </summary>
        public static string FormatGB {
            get {
                return ResourceManager.GetString("FormatGB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  KB.
        /// </summary>
        public static string FormatKB {
            get {
                return ResourceManager.GetString("FormatKB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  MB.
        /// </summary>
        public static string FormatMB {
            get {
                return ResourceManager.GetString("FormatMB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} files of {1}, {2} compression, {3} elapsed.
        /// </summary>
        public static string FormatStats {
            get {
                return ResourceManager.GetString("FormatStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive delete entry syntax:.
        /// </summary>
        public static string HelpDeleteEntry {
            get {
                return ResourceManager.GetString("HelpDeleteEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive help syntax: 
        ///  ZipArchive -Help -&lt;verb&gt; 
        /// 
        ///    &lt;verb&gt; -List    Help on listing the files in a zip archive 
        ///           -Unzip   Help on unzipping the files from an archive into 
        ///                    a directory 
        ///           -Zip     Help on zipping the files in a directory into an archive.
        /// </summary>
        public static string HelpHelp {
            get {
                return ResourceManager.GetString("HelpHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive list syntax: 
        ///  ZipArchive -List -archive &lt;archive file path&gt; 
        ///                   -noShort | -short
        ///                   -stats | -nostats 
        ///  
        ///    -archive  - Archive file path 
        ///    -a  
        ///  
        ///    -short    - Display names only. Default is -noShort
        ///    -sh
        ///    -noShort  
        ///    -nsh
        ///  
        ///    -stats    - Display statistics. Default is -stats  
        ///    -st
        ///    -noStats 
        ///    -nst.
        /// </summary>
        public static string HelpList {
            get {
                return ResourceManager.GetString("HelpList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive list entry syntax:.
        /// </summary>
        public static string HelpListEntry {
            get {
                return ResourceManager.GetString("HelpListEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive unzip directory syntax: 
        ///  ZipArchive -UnzipDir -archive &lt;archive file path&gt; 
        ///                    -target &lt;source directory path&gt; 
        ///                    -noOverwriteTarget | -overwriteTarget
        ///                    -stats | -nostats  
        /// 
        ///    -archive          - Archive file path 
        ///    -a  
        ///    
        ///    -target           - Target directory path
        ///    -t 
        ///     
        ///    -overwriteTarget  - Overwrite target directory if existent. Default is -NoOverwriteTarget
        ///    -ot
        ///    -noOverwriteTarget
        ///    -not
        ///          /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string HelpUnzipDir {
            get {
                return ResourceManager.GetString("HelpUnzipDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive unzip file syntax:.
        /// </summary>
        public static string HelpUnzipFile {
            get {
                return ResourceManager.GetString("HelpUnzipFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive general syntax: 
        ///  ZipArchive -&lt;verb&gt; &lt;verb-specific parameters&gt; &lt;common parameters&gt; 
        ///   
        ///    &lt;verb&gt; - -Help   General help for this command 
        ///             -List   List the files in a zip archive 
        ///             -UnzipDir   Unzip the files from an archive into a directory 
        ///             -ZipDir  Zip the files in a directory into an archive 
        ///   .
        /// </summary>
        public static string HelpVerb {
            get {
                return ResourceManager.GetString("HelpVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive zip directory syntax: 
        ///  ZipArchive -ZipDir -archive &lt;archive file path&gt; 
        ///                  -source &lt;source directory path&gt; 
        ///                  -compressionLevel &lt;Optimal |  Fastest | NoCompression&gt; 
        ///                  -includeBase | -noIncludeBase
        ///                  -noOverwriteArchive | -overwriteArchive
        ///                  -stats | -nostats
        /// 
        ///    -archive          - Archive file path
        ///    -a 
        ///    
        ///    -source           - Source directory path
        ///    -s
        ///    
        ///    -compressionLevel - Compres [rest of string was truncated]&quot;;.
        /// </summary>
        public static string HelpZipDir {
            get {
                return ResourceManager.GetString("HelpZipDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipArchive zip file syntax:.
        /// </summary>
        public static string HelpZipFile {
            get {
                return ResourceManager.GetString("HelpZipFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -allowDuplicate.
        /// </summary>
        public static string KeyAllowDuplicate {
            get {
                return ResourceManager.GetString("KeyAllowDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -ad.
        /// </summary>
        public static string KeyAllowDuplicate_ {
            get {
                return ResourceManager.GetString("KeyAllowDuplicate_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -archive.
        /// </summary>
        public static string KeyArchive {
            get {
                return ResourceManager.GetString("KeyArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -a.
        /// </summary>
        public static string KeyArchive_ {
            get {
                return ResourceManager.GetString("KeyArchive_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -compressionLevel.
        /// </summary>
        public static string KeyCompressionLevel {
            get {
                return ResourceManager.GetString("KeyCompressionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -cl.
        /// </summary>
        public static string KeyCompressionLevel_ {
            get {
                return ResourceManager.GetString("KeyCompressionLevel_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -entry.
        /// </summary>
        public static string KeyEntry {
            get {
                return ResourceManager.GetString("KeyEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -e.
        /// </summary>
        public static string KeyEntry_ {
            get {
                return ResourceManager.GetString("KeyEntry_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -file.
        /// </summary>
        public static string KeyFile {
            get {
                return ResourceManager.GetString("KeyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -f.
        /// </summary>
        public static string KeyFile_ {
            get {
                return ResourceManager.GetString("KeyFile_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -help.
        /// </summary>
        public static string KeyHelp {
            get {
                return ResourceManager.GetString("KeyHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -?.
        /// </summary>
        public static string KeyHelp_ {
            get {
                return ResourceManager.GetString("KeyHelp_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -includeBase.
        /// </summary>
        public static string KeyIncludeBase {
            get {
                return ResourceManager.GetString("KeyIncludeBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -ib.
        /// </summary>
        public static string KeyIncludeBase_ {
            get {
                return ResourceManager.GetString("KeyIncludeBase_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -noAllowDuplicate.
        /// </summary>
        public static string KeyNoAllowDuplicate {
            get {
                return ResourceManager.GetString("KeyNoAllowDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -nad.
        /// </summary>
        public static string KeyNoAllowDuplicate_ {
            get {
                return ResourceManager.GetString("KeyNoAllowDuplicate_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -noIncludeBase.
        /// </summary>
        public static string KeyNoIncludeBase {
            get {
                return ResourceManager.GetString("KeyNoIncludeBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -nib.
        /// </summary>
        public static string KeyNoIncludeBase_ {
            get {
                return ResourceManager.GetString("KeyNoIncludeBase_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -noOverwriteArchive.
        /// </summary>
        public static string KeyNoOverwriteArchive {
            get {
                return ResourceManager.GetString("KeyNoOverwriteArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -noa.
        /// </summary>
        public static string KeyNoOverwriteArchive_ {
            get {
                return ResourceManager.GetString("KeyNoOverwriteArchive_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -noOverwriteTarget.
        /// </summary>
        public static string KeyNoOverwriteTarget {
            get {
                return ResourceManager.GetString("KeyNoOverwriteTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -not.
        /// </summary>
        public static string KeyNoOverwriteTarget_ {
            get {
                return ResourceManager.GetString("KeyNoOverwriteTarget_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -noShort.
        /// </summary>
        public static string KeyNoShort {
            get {
                return ResourceManager.GetString("KeyNoShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -nsh.
        /// </summary>
        public static string KeyNoShort_ {
            get {
                return ResourceManager.GetString("KeyNoShort_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -noStats.
        /// </summary>
        public static string KeyNoStats {
            get {
                return ResourceManager.GetString("KeyNoStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -nst.
        /// </summary>
        public static string KeyNoStats_ {
            get {
                return ResourceManager.GetString("KeyNoStats_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -overwriteArchive.
        /// </summary>
        public static string KeyOverwriteArchive {
            get {
                return ResourceManager.GetString("KeyOverwriteArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -oa.
        /// </summary>
        public static string KeyOverwriteArchive_ {
            get {
                return ResourceManager.GetString("KeyOverwriteArchive_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -overwriteTarget.
        /// </summary>
        public static string KeyOverwriteTarget {
            get {
                return ResourceManager.GetString("KeyOverwriteTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -ot.
        /// </summary>
        public static string KeyOverwriteTarget_ {
            get {
                return ResourceManager.GetString("KeyOverwriteTarget_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -short.
        /// </summary>
        public static string KeyShort {
            get {
                return ResourceManager.GetString("KeyShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -sh.
        /// </summary>
        public static string KeyShort_ {
            get {
                return ResourceManager.GetString("KeyShort_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -source.
        /// </summary>
        public static string KeySource {
            get {
                return ResourceManager.GetString("KeySource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -s.
        /// </summary>
        public static string KeySource_ {
            get {
                return ResourceManager.GetString("KeySource_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -stats.
        /// </summary>
        public static string KeyStats {
            get {
                return ResourceManager.GetString("KeyStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -st.
        /// </summary>
        public static string KeyStats_ {
            get {
                return ResourceManager.GetString("KeyStats_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -target.
        /// </summary>
        public static string KeyTarget {
            get {
                return ResourceManager.GetString("KeyTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -t.
        /// </summary>
        public static string KeyTarget_ {
            get {
                return ResourceManager.GetString("KeyTarget_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -DeleteEntry.
        /// </summary>
        public static string VerbDeleteEntry {
            get {
                return ResourceManager.GetString("VerbDeleteEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -Help.
        /// </summary>
        public static string VerbHelp {
            get {
                return ResourceManager.GetString("VerbHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -?.
        /// </summary>
        public static string VerbHelp_ {
            get {
                return ResourceManager.GetString("VerbHelp_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -List.
        /// </summary>
        public static string VerbList {
            get {
                return ResourceManager.GetString("VerbList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -ListEntry.
        /// </summary>
        public static string VerbListEntry {
            get {
                return ResourceManager.GetString("VerbListEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -UnzipDir.
        /// </summary>
        public static string VerbUnzipDir {
            get {
                return ResourceManager.GetString("VerbUnzipDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -UnzipFile.
        /// </summary>
        public static string VerbUnzipFile {
            get {
                return ResourceManager.GetString("VerbUnzipFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -ZipDir.
        /// </summary>
        public static string VerbZipDir {
            get {
                return ResourceManager.GetString("VerbZipDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -ZipFile.
        /// </summary>
        public static string VerbZipFile {
            get {
                return ResourceManager.GetString("VerbZipFile", resourceCulture);
            }
        }
    }
}
